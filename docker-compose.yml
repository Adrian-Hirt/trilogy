services:
  db:
    platform: linux/x86_64
    image: "ghcr.io/trilogy-libraries/trilogy/ci-mysql:${MYSQL_VERSION}-debian"
    command:
      - --sql_mode=NO_ENGINE_SUBSTITUTION
      - --server-id=1
      - --gtid-mode=ON
      - --enforce-gtid-consistency=ON
      - --log-bin=mysql-bin.log
      - --ssl-ca=/mysql-certs/ca.pem
      - --ssl-cert=/mysql-certs/server-cert.pem
      - --ssl-key=/mysql-certs/server-key.pem
    build:
      context: .
      dockerfile: Dockerfile.mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
      cache_from:
        - ghcr.io/trilogy-libraries/trilogy/ci-mysql:${MYSQL_VERSION}-debian
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      MYSQL_DATABASE: test
      MYSQL_HOST: db.local
    volumes:
      - "./tmp/mysql-certs:/mysql-certs"
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
  app:
    image: ghcr.io/trilogy-libraries/trilogy/ci-app:distro-${DISTRIBUTION_SLUG}-ruby-${RUBY_VERSION}-mysql-${MYSQL_VERSION}
    privileged: true
    build:
      context: .
      args:
        - BUILDKIT_INLINE_CACHE=1
        - DISTRIBUTION=${DISTRIBUTION}
        - RUBY_VERSION=${RUBY_VERSION}
      cache_from:
        - ghcr.io/trilogy-libraries/trilogy/ci-app:distro-${DISTRIBUTION_SLUG}-ruby-${RUBY_VERSION}-mysql-${MYSQL_VERSION}
    environment:
      MYSQL_HOST: db.local
      TRILOGY_TEST_CERTS: "/mysql-certs"
    depends_on:
      - db
    links:
      - "db:db.local"
      - "db:wildcard.db.local"
    volumes:
      - "./tmp/mysql-certs:/mysql-certs"
